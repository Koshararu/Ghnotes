# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded —á–µ—Ä–µ–∑ https://t.me/hikkamods_bot
# ( o.o )  üîì –ù–µ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–æ.
#  > ^ <   ‚ö†Ô∏è –í–ª–∞–¥–µ–ª–µ—Ü heta.hikariatama.ru –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
# ---------------------------------------------------------------------------------
# Name: TTDownloadMod
# Description: –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ/—Ñ–æ—Ç–æ/–∞—É–¥–∏–æ –∏–∑ TikTok
# Author: chatGPT
# Commands:
# .ttd {link}
# ---------------------------------------------------------------------------------

# meta developer: chatGPT

import asyncio
import logging
import re
from telethon import events
from telethon.tl.types import MessageMediaPhoto, MessageMediaDocument

from .. import loader, utils

chat = "@projectaltair_bot"

class TTDownloadMod(loader.Module):
    """–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ/—Ñ–æ—Ç–æ/–∞—É–¥–∏–æ –∏–∑ TikTok"""

    strings = {"name": "TTDownloadMod"}

    async def client_ready(self, client, db):
        self.db = db

    async def ttdcmd(self, message):
        """.ttd {link} - –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ/—Ñ–æ—Ç–æ/–∞—É–¥–∏–æ –∏–∑ TikTok"""

        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok.")
            return

        await utils.answer(message, "–°–∫–∞—á–∏–≤–∞—é...")

        bot_send_link = await message.client.send_message(chat, args)
        media_messages = []

        async def handler(event):
            if event.message.sender_id == (await message.client.get_peer_id(chat)) and event.message.media:
                logging.info("–ü–æ–ª—É—á–µ–Ω–æ –º–µ–¥–∏–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞")
                media_messages.append(event.message)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
        message.client.add_event_handler(handler, events.NewMessage(incoming=True, from_users=chat))

        try:
            await asyncio.sleep(5)  # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç—ã –æ—Ç –±–æ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if media_messages:
                photos = [msg.media for msg in media_messages if isinstance(msg.media, MessageMediaPhoto)]
                documents = [msg.media for msg in media_messages if isinstance(msg.media, MessageMediaDocument)]
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                if photos:
                    await message.client.send_file(message.to_id, photos, caption="–ü–æ —Å—Å—ã–ª–∫–µ –ª–µ–Ω—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –±—ã–ª–æ")

                # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ)
                if documents:
                    for doc in documents:
                        await message.client.send_file(message.to_id, doc, caption="–ü–æ —Å—Å—ã–ª–∫–µ –ª–µ–Ω—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –±—ã–ª–æ")
        finally:
            # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            message.client.remove_event_handler(handler, events.NewMessage(incoming=True, from_users=chat))
            await bot_send_link.delete()
            await message.delete()
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
            for msg in media_messages:
                await msg.delete()

    async def ttacceptcmd(self, message):
        """.ttaccept {reply/id} –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ —á–∞—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫. –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n.ttaccept -l –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —á–∞—Ç–æ–≤"""

        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        users_list = self.db.get("TTsaveMod", "users", [])

        if args == "-l":
            if len(users_list) == 0:
                return await utils.answer(message, "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
            return await utils.answer(
                message,
                "‚Ä¢ " + "\n‚Ä¢ ".join(["<code>" + str(i) + "</code>" for i in users_list]),
            )

        try:
            if not args and not reply:
                user = message.chat_id
            else:
                user = reply.sender_id if not args else int(args)
        except:
            return await utils.answer(message, "–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥—ë–Ω ID.")
        if user in users_list:
            users_list.remove(user)
            await utils.answer(message, f"ID <code>{str(user)}</code> –∏—Å–∫–ª—é—á–µ–Ω.")
        else:
            users_list.append(user)
            await utils.answer(message, f"ID <code>{str(user)}</code> –¥–æ–±–∞–≤–ª–µ–Ω.")
        self.db.set("TTsaveMod", "users", users_list)

    async def watcher(self, message):
        try:
            users = self.db.get("TTsaveMod", "users", [])
            if message.chat_id not in users:
                return

            links = re.findall(
                r"((?:https?://)?v[mt]\.tiktok\.com/[A-Za-z0-9_]+/?)", message.raw_text
            )

            if not links:
                return

            async with message.client.conversation(chat) as conv:
                for link in links:
                    await utils.answer(message, f"–û—Ç–ø—Ä–∞–≤–ª—è—é —Å—Å—ã–ª–∫—É –≤ –±–æ—Ç @projectaltair_bot: {link}")

                    bot_send_link = await conv.send_message(link)
                    media_messages = []

                    async def handler(event):
                        if event.message.sender_id == (await message.client.get_peer_id(chat)) and event.message.media:
                            logging.info("–ü–æ–ª—É—á–µ–Ω–æ –º–µ–¥–∏–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞")
                            media_messages.append(event.message)

                    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
                    message.client.add_event_handler(handler, events.NewMessage(incoming=True, from_users=chat))

                    try:
                        await asyncio.sleep(5)  # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç—ã –æ—Ç –±–æ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                        if media_messages:
                            photos = [msg.media for msg in media_messages if isinstance(msg.media, MessageMediaPhoto)]
                            documents = [msg.media for msg in media_messages if isinstance(msg.media, MessageMediaDocument)]
                            
                            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                            if photos:
                                await message.client.send_file(message.chat_id, photos, caption="–ü–æ —Å—Å—ã–ª–∫–µ –ª–µ–Ω—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –±—ã–ª–æ")

                            # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ)
                            if documents:
                                for doc in documents:
                                    await message.client.send_file(message.chat_id, doc, caption="–ü–æ —Å—Å—ã–ª–∫–µ –ª–µ–Ω—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –±—ã–ª–æ")
                    finally:
                        # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                        message.client.remove_event_handler(handler, events.NewMessage(incoming=True, from_users=chat))
                        await bot_send_link.delete()

        except Exception as e:
            await utils.answer(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
